class t extends HTMLElement{static get observedAttributes(){return ["breakpoints"]}constructor(){super(),this.attachShadow({mode:"open"});}connectedCallback(){this.render();}breakpointStyles(){return (this.breakpoints?this.breakpoints.trim().split(","):[]).map((t,e)=>`\n      @media screen and (min-width: ${t}) {\n        :host {}\n      }\n      `).join("")}get breakpoints(){return this.getAttribute("breakpoints")}set breakpoints(t){this.setAttribute("breakpoints",t);}render(){const t=`\n      <style>\n        :host {\n          display: flex;\n        }      \n        ${this.breakpoints?this.breakpointStyles():""}\n      </style>\n      <slot></slot>\n    `;this.shadowRoot.innerHTML=t;}attributeChangedCallback(t,e,n){e!==n&&this.render();}}customElements.define("flex-layout",t);
//# sourceMappingUrl=flex-layout.js.map
